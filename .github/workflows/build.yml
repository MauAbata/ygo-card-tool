name: Build
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Install LibUSB - Mac
        if: matrix.os == 'macos-latest'
        run: brew install libusb-compat

      - name: Install LibUSB - Linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libusb-dev

      - name: Remove Strawberry - Windows
        if: matrix.os == 'windows-latest'
        run: rmdir /s /q C:\Strawberry
        shell: cmd

      - name: Install LibUSB - Windows
        if: matrix.os == 'windows-latest'
        id: vcpkg
        uses: johnwason/vcpkg-action@v5
        with:
          pkgs: libusb
          triplet: x64-windows-release
          token: ${{ github.token }}

      - name: Checkout the repository
        uses: actions/checkout@v3.5.3
        with:
          submodules: recursive

      - name: Validate VCPkg - Windows
        if: matrix.os == 'windows-latest'
        run: |
          dir ${{ github.workspace }}/vcpkg
          dir ${{ github.workspace }}/vcpkg/scripts
          dir ${{ github.workspace }}/vcpkg/scripts/buildsystems
        shell: cmd

      - name: Run CMake - Windows
        if: matrix.os == 'windows-latest'
        uses: threeal/cmake-action@v1.3.0
        with:
          run-build: true
          args: >
            -DCMAKE_TOOLCHAIN_FILE:PATH=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
            -DVCPKG_TARGET_TRIPLET=x64-windows-release
            -DVCPKG_MANIFEST_MODE=OFF

      - name: Run CMake - Unix
        if: matrix.os != 'windows-latest'
        uses: threeal/cmake-action@v1.3.0
        with:
          run-build: true

      - name: Test the project
        run: ctest --test-dir build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: bin
